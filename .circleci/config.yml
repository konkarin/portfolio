version: 2.1
commands:
  set-env:
    steps:
      - run:
          name: set env
          command: |
            TARGET_ENV=""
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              TARGET_ENV="production"
            fi
            echo "export TARGET_ENV=${TARGET_ENV}" >> $BASH_ENV
  switch-env:
    description: 'switch env by branch'
    steps:
      - run: sed -i -e "s/{{TARGET_ENV}}/${TARGET_ENV}/g" config.ts
  install-modules:
    description: 'install node_modules'
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  build-functions:
    description: 'init cloud functions'
    steps:
      - run:
          name: install cloud functions dependencies
          command: cd functions && npm ci
      - run:
          name: build
          command: cd functions && npm run build

jobs:
  deploy_sta:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - set-env
      - switch-env
      - install-modules
      - run:
          name: build
          command: npm run generate
      - build-functions
      - run:
          name: deploy to Firebase
          # devDependenciesに firebase-tools が必須 npm i -D firebase-tools
          command: ./node_modules/.bin/firebase deploy -f --token=$STAGING_FIREBASE_TOKEN --project=$STAGING_FIREBASE_PJ

  deploy_sta_hosting:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - install-modules
      - run:
          name: build
          command: npm run generate
      - run:
          name: deploy to Firebase Hosting
          # devDependenciesに firebase-tools が必須 npm i -D firebase-tools
          command: ./node_modules/.bin/firebase deploy --only hosting --token=$STAGING_FIREBASE_TOKEN --project=$STAGING_FIREBASE_PJ

  deploy_prod:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - run:
          name: npm ci
          command: npm ci && cd functions && npm ci
      - run:
          name: build
          command: npm run generate && cd functions && npm run build
      - run:
          name: deploy to Firebase Hosting
          # devDependenciesに firebase-tools が必須 npm i -D firebase-tools
          command: ./node_modules/.bin/firebase deploy -f --token=$FIREBASE_TOKEN --project=$FIREBASE_PJ

  deploy_prod_hosting:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - run:
          name: npm ci
          command: npm ci
      - run:
          name: build
          command: npm run generate
      - run:
          name: deploy to Firebase Hosting
          # devDependenciesに firebase-tools が必須 npm i -D firebase-tools
          command: ./node_modules/.bin/firebase deploy --only hosting --token=$FIREBASE_TOKEN --project=$FIREBASE_PJ

workflows:
  version: 2
  deploy_sta:
    jobs:
      - deploy_sta:
          filters:
            branches:
              only: develop
  deploy_prod:
    jobs:
      - deploy_prod:
          filters:
            branches:
              only: master
